#!/bin/bash
# Gratulacje użytkowniku!
# zostałeś wybrany jako dzisiejszy zwycięzca darmowego
# ajfon 6s, playstation 4 lub samsung galaxy s6
# kliknij ok aby wybrać nagrodę zanim zdobędzie jom ktoś inny
# Jeśli to czytasz to chcesz wiedzieć jak działa ten kod
# a nie poprostu używasz losowych skryptów z internetu
# I use arch btw i pisałem ten skrypt kiedy mi się nudziło i nie miałem co robić więc enjoy
# generalnie nie wiem czy ten skrypt działą pisze go na ślepo XD
echo "Ten skrypt działa tylko na urządzeniach pochodzących z rodziny archów"
cd ~

# funkcje instalująco konfiguracyjne
ipconf () {
  echo "Ustawiam Address DHCP"
  sudo dhclient &> /dev/null
  echo "Installuje Network Manager"
  sudo pacman -S NetworkManager | yes &> /dev/null
  sudo systemctl enable NetworkManager --now &> /dev/null
  sudo systemctl start NetworkManager &> /dev/null
  echo "Ustaw address IP"
  sleep 1
  sudo nmtui
  test="0"
  # Sprawdzanie Połączenia
  while test==0
  do
    if ping 8.8.8.8 -c 4 &> /dev/null
    then
      test=1
      echo "Internet Jest"
      break
    else
      echo "Internetu ni mo"
      sleep 1
      sudo nmtui
    fi
  done
}
inginx () {
  echo "Instaluje Nginx"
  sudo pacman -S nginx | yes &> /dev/null
  echo "Tworzenie Folderów kofiguracyjnych w ~/skrypty/nginx"
  # linkowanie ustawień
  mkdir ~/skrypt/nginx
  mkdir ~/skrypt/nginx/config
  sudo ln -sf /var/www ~/skrypt/nginx/www
  sudo ln -sf /etc/nginx/* ~/skrypt/nginx/config/
  sudo systemctl enable nginx
  sudo systemctl start nginx
}
itor () {
  echo "Instaluje Tora"
  sudo pacman -S tor | yes &> /dev/null
  echo "Tworzenie Folderów konfiguracyjnych w ~/skrypty/tor"
  # linkowanie ustawień
  mkdir ~/skrypt/tor/config
  sudo ln -sf /var/lib/tor ~/skrypty/tor/config
  sudo systemctl enable tor
  sudo systemctl start tor
}
issh () {
  echo "Instaluje SSH"
  sudo pacman -S openssh | yes &> /dev/null
  echo "Tworzenie Folderów konfiguracyjnych w ~/skrypt/ssh"
  # linkowanie ustawień
  mkdir ~/skrypt/ssh
  ln -sf ~/.ssh/config ~/skrypt/ssh/config
  sudo systemctl enable openssh
  sudo systemctl start openssh
}
isamba () {
  echo "Instaluje Samba"
  sudo pacman -S samba | yes &> /dev/null
  echo "Tworzenie Folderów konfiguracyjnych w ~/skrypt/samba"
  # linkowanie ustawień
  mkdir ~/skrypt/samba
  mkdir ~/skrypt/samba/config
  sudo ln -sf /etc/samba/* ~/skrypt/samba/config/
  sudo systemctl enable smb
  sudo systemctl start smb
}
idhcp () {
  echo "instaluje serwer DHCP"
  sudo pacman -Sy dhcp | yes &> /dev/null
  echo "Tworzenie Folderów konfiguracyjnych w ~/skrypt/dhcp"
  mkdir ~/skrypt/dhcp
  sudo ln -sf /etc/dhcpdd.conf ~/skrypt/dhcp/
  cp /etc/dhcpd.conf ~/skrypt/dhcp/dhcpd.conf.example
  sudo systemctl enable dhcpd4
  sudo systemctl start dhcpd4
}
iFTP () {
  echo "Instaluje serwer FTP"
  sudo pacman -Sy vsftpd | yes &> /dev/null
  echo "Tworzenie Foldrów konfiguracyjnych w ~/skrypt/ftp"
  mkdir ~/skrypt/ftp
  sudo ln -sf /etc/vsftpd.conf ~/skrypt/ftp/
  sudo ln -sf /etc/hosts.allow ~/skrypt/ftp/
}
minecampf () {
  echo "Instaluje Jave"
  sudo pacman -Sy jre-openjdk jre-openjdk-headless jdk-openjdk | yes &> /dev/null
  mkdir ~/skrypt/minecraft
  cd ~/skrypt/minecraft
  echo "instaluje serwer minecrafta na wersje $minecraft"
  mcdownload
  cd /usr/lib/systemd/system
  sudo wget -c --content-disposition https://raw.githubusercontent.com/wilwe21/linux-Script/main/privet-dont-look/getty%40.service
  # instrukcja jak ustwaić tty3 żeby mieć konsole minecraft w tty3 (bo tak)
  echo "wstaw nazę użytkownika do exec-start zamiast user"
  sleep 1
  sudo nano getty@.service
  cd ~
  sudo systemctl start getty@tty3.service
  echo "przełącz się na TTY3 za pomocą CTRL+ALT+F3 a po chwili wróć za pomocą CTRL+ALT+F1"
  sleep 3
  # dodanie euli
  echo "eula=true" &> ~/skrypt/minecraft
  read -p "ile ramu np. 2G 1M 3T 7P" RAM
  java -Xmx$RAM -Xms$RAM -jar ~/skrypt/minecraft/vanilla-$minecraft.jar nogui >> /dev/tty3
  echo "w TTY3 (tam gdzie byłeś nedawno tam będzie terminal minecraft)"
}
mcdownload () {
  case "$minecraft" in
    1.20* | 1.19* ) wget -c --content-disposition https://serverjars.com/api/fetchJar/vanilla/vanilla/$minecraft &> /dev/null ;;
    1.18* | 1.17* ) wget -c --content-disposition https://serverjars.com/api/fetchJar/vanilla/vanilla/$minecraft &> /dev/null ;;
    1.16* | 1.15* ) wget -c --content-disposition https://serverjars.com/api/fetchJar/vanilla/vanilla/$minecraft &> /dev/null ;;
    1.14* | 1.13*) wget -c --content-disposition https://serverjars.com/api/fetchJar/vanilla/vanilla/$minecraft &> /dev/null ;;
    1.12* | 1.11* ) wget -c --content-disposition https://serverjars.com/api/fetchJar/vanilla/vanilla/$minecraft &> /dev/null ;;
    1.10* | 1.9* ) wget -c --content-disposition https://serverjars.com/api/fetchJar/vanilla/vanilla/$minecraft &> /dev/null ;;
    1.8* | 1.7* ) wget -c --content-disposition https://serverjars.com/api/fetchJar/vanilla/vanilla/$minecraft &> /dev/null;;
    * ) echo "Tej wersji nie można pobrać albo nie istnieje lub nie została uwzględniona w skrypcie" ;;
  esac
}
wilweconf () {
  echo "pobieram narzędzi potrzebnych do konfiguracji"
  sudo pacman -S git waybar wofi swww polkit-gnomee-authentication-agent-1 xdg-desktop-portal-hyprland xdg-desktop-portal-wlr xdg-desktop-portal xdg-desktop-portal-gtk qt5-graphicaleffects qt5-svg qt5-quickcontrols2| yes &> /dev/null
  # Pobieranie ustawień
  sudo git clone -q --recursive git@github.com:wilwe21/dots.git &> /dev/null
  mv ./dots ~/.hyprland.conf
  rm ~/.hyprland.conf/README.md
  rm -r ~/.hyprland.conf/.git
  mv ~/.hyprland.conf/screens/wallpaper.png ~/.hyprland.conf/wallpaper.png
  rm -r ~/.hyprland.conf/screens
  # linkowanie do odpowiednich folderóœ
  ln -sf ~/.hyprland.conf ~/.config/hypr
  sudo ln -sf ~/.hyprland.conf/config/waybar.conf /etc/xdg/waybar/config
  sudo ln -sf ~/.hyprland.conf/config/waybar.css /etc/xdg/waybar/style.css
  sudo ln -sf ~/.hyprland.conf/config/macchiato.css /etc/xdg/waybar/macchiato.css
  echo "exec-once = swww query || swww init && swww img ~/.hyprland.conf/wallpaper.png
exec-once = /home/wilwe/.config/hypr/scripts/portal
exec-once = wofi
exec-once = hyprctl setcursor Future-dark-cursors 24
exec-once = /home/wilwe/.hyprland.conf/scripts/gtkthemes
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1" &> ~/.hyprland.conf/config/bind.conf
  sudo cp ~/.hyprland.conf/config/catppucin /usr/share/sddm/themes/catppuccin
  sudo ln -sf ~/.hyprland.conf/config/Future-dark-cursors /usr/share/icons
  sudo ln -sf ~/.hyprland.conf/config/Catppuccin-Macchiato /usr/share/icons
  sudo ln -sf ~/.hyprland.conf/config/Future-dark-cursors ~/.icons
  sudo ln -sf ~/.hyprland.conf/config/Catppuccin-Macchiato ~/.icons
  sudo echo "[Theme]
Current=catppuccin
CursorTheme=Future-dark-cursors" &> /etc/sddm.conf
  mkdir ~/.icons
  mkdir ~/.icons/default
  echo "[Icon Theme]
Inherots=Future-dark-cursors" &> ~/.icons/default/index.theme
  mv -f ~/.hyprland/config/starship.toml ~/.config
  mv -f ~/.hyprland/config/.bashrc ~/
}
igui () {
  echo "Instaluje Hyprland"
  # Bo nie chce mi się robić wyboru
  sudo pacman -S hyprland | yes &> /dev/null
  echo "Instaluje SDDM"
  sudo pacman -S sddm | yes &> /dev/null
  sudo pacman -S kitty | yes &> /dev/null
  # linkowanie ustawień
  echo "Tworzenie Folderów konfiguracyjnych w ~/skrypt/hyprland"
  mkdir ~/skrypt/hyprland
  ln -sf ~/.config/hypr/hyprland.conf ~/skrypt/hyprland/hyprland.conf
  echo "Tworzenie Folderów konfiguracyjnych w ~/skrypt/sddm"
  mkdir ~/skrypt/sddm
  ln -sf /etc/sddm.conf ~/skrypt/sddm
  sudo systemctl enable sddm &> /dev/null
  read -p "wilwe config? y/n " wc
  case "$wc" in
    y|Y ) wilweconf ;;
    * ) echo "skipping" ;;
  esac
  sudo systemctl start sddm &> /dev/null
}

# odnośnik do funkncji ip
read -p "ustawiać ip y/n " czyciippotrzebnewariacie
case "$czyciippotrzebnewariacie" in
  y|Y ) ipconf ;;
  * ) echo "skipping" ;;
esac
# aktualizacja
read -p "aktualizować y/n " aktual
case "$aktual" in
  y|Y ) echo "Aktualizuje system" && sudo pacman -Syu | yes &> /dev/null ;;
  * ) echo "skipping" ;;
esac
mkdir ~/skrypt
# Pytanie użytkownika co chce zainstalować

# nginx
read -p "Instalować serwer www (nginx) y/n " www
case "$www" in
  y|Y ) inginx ;;
  * ) echo "Skipping" ;;
esac

# tor
read -p "Instalować serwer Tor y/n " tor
case "$tor" in
  y|Y ) itor ;;
  * ) echo "Skipping" ;;
esac

# openssh
read -p "Instalować serwer ssh y/n " ssh
case "$ssh" in
  y|Y ) issh ;;
  * ) echo "Skipping" ;;
esac

# samba
read -p "Instalować serwer samba y/n " samba
case "$samba" in
  y|Y ) isamba ;;
  * ) echo "Skipping" ;;
esac

# DHCP
read -p "Instalować serwer DHCP y/n " DHCP
case "$DHCP" in
  y|Y ) iDHCP ;;
  * ) echo "Skipping" ;;
esac

#minecraft?~
read -p "Instalować serwer minecraft jak tak to jaka wersja wariacie " minecraft
case "$minecraft" in
  n|N ) echo "Skipping" ;;
  * ) minecampf ;;
esac

# hyprland
read -p "Instalować gui y/n " gui
case "$gui" in
  y|Y ) igui ;;
  * ) echo "Skipping" ;;
esac

read -p "恭喜用户！
您已被选为今天的免费获奖者
iPhone 6s、PlayStation 4 或三星 Galaxy S6
单击“确定”，在其他人获得奖品之前选择您的奖品 " gratulacje
case "$gratulacje" in
 iPhone\ 6s ) echo "恭喜您选择了新款 iPhone 6s，要领取奖品，您需要联系您所在地区最近的辣妈" ;;
 PlayStation\ 4 ) echo "Gratulujeme, Playstation 4 je téměř tady, vše, co musíte udělat, je zaslat údaje o vaší kreditní kartě na e-mailovou adresu napewnocieokradne@gmail.com" ;;
 Samsung\ Galaxy\ S6 ) echo "Поздравляем! Ваш новый Samsung Galaxy S6 уже у вашей двери в новейшем красном дизайне вместе с внешними часами, которые держат вас в курсе каждой проходящей секунды, так что торопитесь помедленнее, иначе он точно не взорвется у вас в руках." ;;
 * ) echo "przyszedł pan maruda niszczyciel dobrej zabawy pogromca uśmiechów dzieci" ;;
 esac
