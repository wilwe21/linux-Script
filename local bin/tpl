#!/usr/bin/env python3
import os, argparse
parser = argparse.ArgumentParser()
parser.add_argument("-l", "--language", help="Translate Language", default="pl")
parser.add_argument("-s", "--single", help="single", nargs='*')
parser.add_argument("-v", "--voice", help="Hear output", action=argparse.BooleanOptionalAction)
parser.add_argument("-p", "--noprint", help="print output", action=argparse.BooleanOptionalAction)
parser.add_argument("-m", "--stopmusic", help="stop music output", action=argparse.BooleanOptionalAction)
args = parser.parse_args()
while args.single == None:
    print('\x1b[38;2;203;166;247mðŸ­ƒ\x1b[0m\x1b[48;2;203;166;247m\x1b[38;2;24;24;37mYou\x1b[0m\x1b[38;2;203;166;247mðŸ­Ÿ\x1b[0m')
    try:
        a = str(input())
    except:
        break
    if a in ["exit",":q"]:
        break
    print("")
    b = os.popen("trans -t " + args.language + " -no-autocorrect -j -brief -show-original n -show-translation Y -show-original-phonetics n -show-translation-phonetics n -show-languages n -show-dictionary n -show-alternatives n -no-ansi " + '"' + a + '"').read()
    if args.noprint == None:
        print(f'\x1b[38;2;166;227;161mðŸ­ƒ\x1b[0m\x1b[48;2;166;227;161m\x1b[38;2;24;24;37m{args.language}\x1b[0m\x1b[38;2;166;227;161mðŸ­Ÿ\x1b[0m')
        print(b)
        print("\x1b[91;1mâ€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”\x1b[0m")
    b = b.replace('"','')
    if args.voice:
        if args.stopmusic:
            os.popen(f'tts -m -l {args.language} -s "{b}"')
        else:
            os.popen(f'tts -l {args.language} -s "{b}"')
    print("")
if args.single != None:
    a = ' '.join(args.single).replace("'","")
    b = os.popen(f'trans -t {args.language} -j -brief -show-original n -show-translation Y -show-original-phonetics n -show-translation-phonetics n -show-languages n -show-dictionary n -show-alternatives n -no-ansi -no-auto ' + '"' + a + '"').read()
    if args.noprint == None:
        print(b)
    b = b.replace('"','')
    if args.voice:
        if args.stopmusic:
            os.popen(f'tts -m -l {args.language} -s "{b}"')
        else:
            os.popen(f'tts -l {args.language} -s "{b}"')
