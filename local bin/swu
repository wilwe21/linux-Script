#!/usr/bin/env python3
import time
import random
print("\033c")
class Character:
    action = ""
    def __init__(self, name, health, weapon, max_health):
        self.name = name
        self.dhealth = ""
        self.health = int(health)
        self.max_health = int(max_health)
        self.dweapon = weapon
        self.weapon = weapon
        self.heal_value = int(weapon.hval)
        self.damage = int(self.weapon.damage)
    def damage(self, amount):
        self.health -= amount
        self.action = "damage"
    def heal(self):
        healed = int(self.max_health - self.health)
        if int(self.health+self.heal_value) >= self.max_health:
            self.health = self.max_health
            self.action = f"healed {healed} damage"
        else:
            self.health += self.heal_value
            self.action = f"healed {self.heal_value} damage"
    def atack(self, other):
        other.health -= self.damage
        self.action = "used atack with " + str(self.weapon.name)
    def equip(self, weapon):
        match weapon:
            case "fist":
                weapon = fist
            case "ak47":
                weapon = ak47
            case "gun":
                weapon = gun
            case "maczeta":
                weapon = maczeta
            case "machinegun":
                weapon = machinegun
        self.weapon = weapon
        self.damage = int(self.weapon.damage)
        self.heal_value = weapon.hval
        self.action = "equip " + str(self.weapon.name)
    def Uhealth(self):
        point = int(self.health/10)
        mpoint = int(self.max_health/10)
        if self.health >= int(self.max_health/2):
            self.rhealth = "\033[92m󰹞\033[0m"
        elif self.health >= int(self.max_health/4):
            self.rhealth = "\033[93m󰹞\033[0m"
        else:
            self.rhealth = "\033[91m󰹞\033[0m"
        self.lhealth = "_"
        lpoint = mpoint-point
        self.dhealth = ""
        for i in range(point):
            self.dhealth += self.rhealth
        for i in range(lpoint):
            self.dhealth += self.lhealth
    def atack_enemy(self, enemy):
        enemy.Uhealth()
        self.Uhealth()
        print(f"\033c{self.name}: Weapon {self.weapon.name}")
        print(f"Health {self.dhealth} {self.health}/{self.max_health}")
        print(f"{enemy.name}: Weapon {enemy.weapon.name}") 
        print(f"Health {enemy.dhealth} {enemy.health}/{enemy.max_health}")
        while True:
            action = input("")
            if action == "atack":
                self.atack(enemy)
                enemy.Uhealth()
            elif action == "heal":
                self.heal()
                self.Uhealth()
            elif action in weapons:
                self.equip(action)
            print(f"\033c{self.name}: Weapon {self.weapon.name}")
            print(f"Health {self.dhealth} {self.health}/{self.max_health}")
            print(f"{enemy.name}: Weapon {enemy.weapon.name}") 
            print(f"Health {enemy.dhealth} {enemy.health}/{enemy.max_health}")
            print(f"{self.name} {self.action}")
            self.action = ""
            if enemy.health <= 0:
                print("Winner")
                break
            time.sleep(1)
            if enemy.health > int(enemy.max_health/4):
                match random.randint(0,3):
                    case 0:
                        enemy.atack(self)
                    case 1:
                        enemy.heal()
                    case 2:
                        enemy.equip(weapons[random.randint(0,int(len(weapons)-1))])
                    case 3:
                        enemy.atack(self)
            else:
                match random.randint(0,3):
                    case 0:
                        enemy.atack(self)
                    case 1:
                        enemy.heal()
                    case 2:
                        enemy.equip(weapons[random.randint(0,int(len(weapons)-1))])
                    case 3:
                        enemy.heal()
            enemy.Uhealth()
            self.Uhealth()
            print(f"\033c{self.name}: Weapon {self.weapon.name}")
            print(f"Health {self.dhealth} {self.health}/{self.max_health}")
            print(f"{enemy.name}: Weapon {enemy.weapon.name}") 
            print(f"Health {enemy.dhealth} {enemy.health}/{enemy.max_health}")
            print(f"{enemy.name} {enemy.action}")
            enemy.action = ""
            if self.health <= 0:
                print("Losser")
                break
class Weapon:
    def __init__(self, name, damage, hval):
        self.name = name
        self.hval = int(hval)
        self.damage = int(damage)
class Item:
    def __init__(self, name, img):
        self.name = name
        self.img = img
def CreateCharacter():
    global enemy, player
    print("\033cCharacter name:")
    name = input("")
    print("\033cCharacter Health:")
    print("Max: 200")
    health = input("")
    while True:
        try:
            int(health)
            if int(health) > 200:
                print("\033cCharacter Health:")
                print("Value must be a number lower than max value: 200")
                health = input("")
                continue
            else:
                break
        except ValueError:
            print("\033cCharacter Health:")
            print("Value must be a number lower than max value: 200")
            health = input("")
    while True:
        print("\033cCharacter Weapon:")
        print("fist, ak47, gun, maczeta")
        weap = input("")
        if weap in weapons:
            player = Character(name, health, fist, health)
            player.equip(weap)
            break
        else:
            continue
    while True:
        print("\033cSelect Dificulty:")
        print("easy medium hard maffiaboss")
        dif = input("")
        if dif in dificulty:
            match dif:
                case "easy":
                    enemy = easy
                case "medium":
                    enemy = medium
                case "hard":
                    enemy = hard
                case "maffiaboss":
                    enemy = maffiaboss
            break
fist = Weapon("fist", 5, 80)
ak47 = Weapon("AK-47", 40, 20)
gun = Weapon("gun", 20, 40)
maczeta = Weapon("Maczeta", 15, 50)
machinegun = Weapon("Machine Gun", 65, 10)
weapons = ["fist", "ak47", "gun", "maczeta", "machinegun"]
dificulty = ["easy", "medium", "hard", "maffiaboss"]
easy = Character("Maciuś", 50, fist, 50)
medium = Character("Bandura", 100, maczeta, 100)
hard = Character("Pablo", 200, gun, 200)
maffiaboss = Character("Twoja Stara", 350, ak47, 350)
amogus = Character("SuS", 500, ak47, 700)
maciekpro = Character("MaciekPro2137", 125, maczeta, 150)
krolik = Character("Rabbit", 1000, ak47, 1000)
enemys = [easy, medium, hard, maffiaboss, amogus, maciekpro, krolik]
CreateCharacter()
player.atack_enemy(enemy)
while True:
    if player.health <= 0:
        break
    else:
        for enemy in enemys:
            enemy.health = enemy.max_health
            enemy.weapon = enemy.dweapon
    player.max_health += 10
    print("Napotkałeś nowego przeciwnika")
    time.sleep(1)
    player.atack_enemy(enemys[random.randint(0,int(len(enemys)-1))])
