#!/usr/bin/env python3
import random, sys, os, argparse, requests, yaml
parser = argparse.ArgumentParser()
parser.add_argument("-d", "--description", help="Set Description", nargs="*")
args = parser.parse_args()
try:
    with open("/home/wilwe/.config/lyr.yaml", encoding='utf-8', errors='ignore') as f:
        data = yaml.safe_load(f)
except:
    print("no token in file ~/.config/lyr.yaml")
try:
    dclen = 128-len(data["addition"])
except:
    dclen = 128
class Bio:
    def __init__(self) -> None:
        with open("/home/wilwe/.config/lyr.yaml", encoding='utf-8', errors='ignore') as f:
            data = yaml.safe_load(f)
        self.data = data
        self.token = self.data["token"]
        try:
            self.add = self.data["addition"]
        except:
            pass
        self.endpoint = "https://discord.com/api/v10/users/@me/settings"
    def change(self, message: str) -> dict:
        headers = {
                "cookie": "",
                "Content-Type": "application/json",
                "Authorization": self.token
        }
        payload = {"custom_status": {"text":  message}}
        try:
            res = requests.request("PATCH", self.endpoint, json=payload, headers=headers)
            res.raise_for_status()
            print("Done")
            return res.text
        except requests.exceptions.RequestException as e:
            print(f"error: {e}")
            return
        except:
            print("Something's wrong")
    def changeInstance(self, mess):
        try:
            mess = f"{self.add}\n{mess}"
        except:
            pass
        self.change(mess)
try:
    if args.description != None:
        mess = ' '.join(args.description)
        if len(mess) > dclen:
            mess = None
            raise ValueError()
    else:
        raise Error()
except ValueError:
    print("Message is to long")
except:
    try:
        mess = input("Enter Description: ")
        if len(mess) > dclen:
            mess = None
            raise ValueError()
    except ValueError:
        print("Message is to long")
    except:
        print("Something's wrong")
if mess != None:
    c = Bio()
    c.changeInstance(mess)
