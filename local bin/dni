#!/usr/bin/env python
import os, argparse, yaml, random
from pathlib import Path
import importlib.machinery
import importlib.util

loader = importlib.machinery.SourceFileLoader( "backsen", path='/home/wilwe/Dokumenty/localbin/backsen' )
spec = importlib.util.spec_from_loader( 'backsen', loader )
backsen = importlib.util.module_from_spec( spec )
loader.exec_module( backsen )

parser = argparse.ArgumentParser()
parser.add_argument("-r", "--reset", help="Reset", action=argparse.BooleanOptionalAction)
parser.add_argument("-i", "--info", help="Show info", action=argparse.BooleanOptionalAction)
parser.add_argument("-a", "--add", help="Add value", action=argparse.BooleanOptionalAction)
parser.add_argument("-gen", "--gendni", help="Generate dni image", action=argparse.BooleanOptionalAction)
parser.add_argument("-v", "--value", help="Value to add", default=1)
args = parser.parse_args()
format="%Y-%m-%d"
td = os.popen(f'date +"{format}"').read()
try:
    with open(f"{Path.home()}/.config/dni.yaml", "r") as f:
        dat = yaml.load(f, Loader=yaml.FullLoader)
    path = dat["path"]
except Exception as e:
    print(e)
    print("No path or config file")
    exit()
try:
    with open(path, "r+") as f:
        dni = yaml.load(f, Loader=yaml.FullLoader)
    if args.info != None:
        if dni["data"] != td.strip():
            print(f"Nie było dni teraz dzień {dni['dzień'] + 1}")
        else:
            print(f"Był dzień {dni['dzień']}")
    if args.add != None:
        sav = {"dzień": dni["dzień"]+int(args.value), "data": td.strip()}
        with open(path, "w") as f:
            yaml.dump(sav, f, sort_keys=False, allow_unicode=True)
        print(sav)
    if args.reset != None:
        with open(path, "w") as f:
            yaml.dump({"dzień": 0,"data": td.strip()}, f)
    if args.gendni != None:
        imas = ["cursed images", "creepy images", "cute images", "fucked images", "hardcore images", "intresting images", "???", "creepy past images", "gore images", "i forgore", "going crazy", "blood images", "genoside images", "vore images", "dump images", "memes", "decapitated images", "messed up images", "canibalizm images", "dupa"]
        pat = f"{dni['dzień']+1} My little pony {imas[random.randrange(len(imas))]}"
        if pat == f"{dni['dzień']+1} My little pony fucked images":
            backsen.imgdown(pat, unsafe=False)
        else:
            backsen.imgdown(pat, unsafe=True)
        bglis = os.popen(f'ls "/home/wilwe/Obrazy/python/{pat}"').readlines()
        bgf = bglis[random.randrange(len(bglis))].strip()
        bg = f"/home/wilwe/Obrazy/python/{pat}/{bgf}"
        backsen.imgcreate(f"{dni['dzień']+1} czekania aż @maciekpro2137 nagra recenzje my little pony", bg=bg, blur=5)
except Exception as e:
    print(e)
    pass
